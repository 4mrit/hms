@page "/admin/features"
@rendermode InteractiveServer
@inject IHttpClientFactory ClientFactory
@using hms.Tenant.API.Model;
@inject NavigationManager NavigationManager
@using WebApp.Services;



<h3>Feature</h3>

<button @onclick="CreateNewFeature">Create new Feature</button>



<br />
<br />



    @if (getFeatures != null)
    {
        <div class="check-features">
            @foreach (var feature in getFeatures)
            {
                <div 
                    class ="individual-feature"
                    onclick="window.location.href = window.location.href+'/@feature.Id';">
                    @* <input type="checkbox" id="@($"feature{feature.Id}")" value="@($"feature{feature.Id}")" @bind="feature.IsChecked" /> *@
                    <label for="@($"feature{feature.Id}")">@feature.Name</label>
                </div>
            }

        </div>
    }
    else{
        <br />
        <p> Loading </p>
    }



@code {


    private ApiHelper helper;


    private Feature[] getFeatures;

    protected override async Task OnInitializedAsync()
    {
        try
        {

            helper = new ApiHelper(ClientFactory, "MyHttpClient");
            base.OnInitialized();

            // Api request to get list of all the features
            var requestUri = "api/Tenants/Feature";
            getFeatures = await helper.GetRequest<Feature[]>(requestUri);

            // Api request to get Tenants Detail


            // foreach (var feature in getfeatures)
            // {
            //     foreach (var getfeaturedata in tenants.Features)
            //     {
            //         if (feature.Id == getfeaturedata.Id)
            //         {
            //             feature.IsChecked = true;
            //         }
            //     }
            // }


        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"Error: {ex.Message}");

        }
    }

    private void CreateNewFeature()
    {
        string requestUrl = "admin/features/new";
        NavigationManager.NavigateTo(requestUrl);
    }
}

