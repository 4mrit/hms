@page "/admin/features/{id:int}"
@inject IHttpClientFactory ClientFactory
@using thms.Tenant.API.Model;
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@using WebApp.Services;



<h3>Feature</h3>
<br />

@if(feature != null)
{
    @if(editBool )
    {
        <form @onsubmit="UpdateFeature">
            <div class="form-group">
                <label>Feature</label>
                <input type="text" 
                     @bind="feature.Name"  />
                <br />
            </div>
            <br/>
            <Button Color="ButtonColor.Primary" Type="ButtonType.Submit">
                Save
            </Button>
        </form>
    }
    else
    {
      <Card>
        <CardBody>
          <CardTitle>
            @feature.Name
          </CardTitle>
        </CardBody>
      </Card>

       
        <br />
        <br />

        <Button Color="ButtonColor.Primary" @onclick="EditFeature" Type="ButtonType.Link"> Edit </Button>
        <Button Color="ButtonColor.Danger" @onclick="DeleteFeature" Type="ButtonType.Link"> Delete </Button>
    }
}

@code {
        [Parameter] public int id { get; set; }


    private Feature feature = new Feature();

    private string newFeature;

    private bool editBool = false;

    private ApiHelper helper;


    protected override async Task OnInitializedAsync()
    {
        try
        {
            helper = new ApiHelper(ClientFactory, "MyHttpClient");
            base.OnInitialized();

            // Api request to get list of all the features
            var requestUri = $"api/Tenants/Feature/{id}";
            feature = await helper.GetRequest<Feature>(requestUri);

            // Api request to get Tenants Detail



        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"Error: {ex.Message}");

        }
    }

    private void EditFeature()
    {
        Console.WriteLine("edit");

        editBool = true;

    }

    async private void UpdateFeature()
    {
        try
        {
            // var httpClient = _httpClientFactory.CreateClient("MyHttpClient");


            // Api request to get list of all the features
            editBool = false;
            var requestUri = $"api/Tenants/Feature/{id}";
            var response = await helper.PutRequest<Feature>(requestUri, feature);

            

            // NavigationManager.NavigateTo("admin/features");


        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"Error: {ex.Message}");

        }
    }

    async private void DeleteFeature()
    {
        Console.WriteLine("Delete");
        try
        {

            // Api request to get list of all the features
            var requestUri = $"api/Tenants/Feature/{id}";
            var response = await helper.DeleteRequest<Feature>(requestUri);

            Console.WriteLine(response);

            NavigationManager.NavigateTo("admin/features");


        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"Error: {ex.Message}");

        }
    }
}
