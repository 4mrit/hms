@page "/admin/tenants/{id:int}"
@using System.Net.Http.Json
@using System.Text.Json
@using thms.Tenant.API.Model;
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@using WebApp.Services;


<h3>UserDetail</h3>
<br />

<p>
    @if(tenants == null)
    {
        <p><em>loading...</em></p>

    } 
    else
    { 
      <Card Style="width:25rem;">
        <CardBody>
          <CardTitle><b>Name : </b>@tenants.Name</CardTitle>
          <CardTitle><b>Address: </b> @tenants.Address</CardTitle>
          <CardTitle><b>URL: </b><a href="http://www.@tenants.Url" > http://www.@tenants.Url </a></CardTitle>
          <CardTitle><b>PrimaryColor: </b>@tenants.Scheme.PrimaryColor.HexValue</CardTitle>
          <CardTitle><b>SecondaryColor: </b>@tenants.Scheme.SecondaryColor.HexValue</CardTitle>
          <CardTitle><b>Features:</b></CardTitle>
          
                @foreach(var data in tenants.Features)
                {
                    <CardTitle>  
                    @data.Name
                  </CardTitle>
                    
                } 
                <Button Color="ButtonColor.Primary" @onclick="EditButton" Type="ButtonType.Link"> Edit </Button>
                <Button Color="ButtonColor.Danger" @onclick="DeleteButton" Type="ButtonType.Link"> Delete </Button>
           </CardBody>
        </Card>
    }
</p>


@code {

    [Parameter] public int id { get; set; } 
    private HospitalTenant tenants;
    private string requestUri;
    private ApiHelper helper;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            helper = new ApiHelper(ClientFactory, "MyHttpClient");
            base.OnInitialized();

            requestUri = $"/api/tenants/{id}";
            // URL for api request

            // Request an GET api
            tenants = await helper.GetRequest<HospitalTenant>(requestUri);
        }
        catch (HttpRequestException ex)
        {
            // Handle exceptions (e.g., network errors)
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private void EditButton()
    {

        Console.WriteLine("Edit button");
        requestUri = $"/admin/tenants/{id}/edit";
        NavigationManager.NavigateTo(requestUri);
    }

    async private void DeleteButton()
    {
        try
        {
            requestUri = $"/api/tenants/{id}";
            var response = await helper.DeleteRequest<HospitalTenant>(requestUri);
            NavigationManager.NavigateTo("admin/tenants");
        }catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        Console.WriteLine("Delete button");
    }
}
