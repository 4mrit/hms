@page "/admin/tenants/{id:int}"
@using System.Net.Http.Json
@using System.Text.Json
@using thms.Tenant.API.Model;
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@using WebApp.Services;


<h3>UserDetail</h3>
<br />

<p>
    @if(tenants == null)
    {
        <p><em>loading...</em></p>

    } 
    else
    { 
        <div>
            
            <p>

            Name:     @tenants.Name
            </p>

            <p>

            Address:  @tenants.Address
            </p>

            <p>

            URL:     <a href="http://www.@tenants.Url">

            http://www.@tenants.Url
            </a>
            </p>

            <p>

            PrimaryColor: @tenants.Scheme.PrimaryColor.HexValue
            </p>

            <p>

            SecondaryColor: @tenants.Scheme.SecondaryColor.HexValue
            </p>

            <p>

            Features:  
                @foreach(var data in tenants.Features)
                {
                    @data.Name;
                    <span>, </span>
                    
                }
            </p>


            <button 
                
                class="btn btn-primary"
                @onclick="EditButton">
                Edit
            </button>

            <button 
                type="button" 
                class="btn btn-danger"
                @onclick="DeleteButton">
                Delete
            </button>

        </div>

       
            
    }
    
</p>


@code {

    [Parameter] public int id { get; set; } 
    private HospitalTenant tenants;

    private string requestUri;

    private ApiHelper helper;


    protected override async Task OnInitializedAsync()
    {
        try
        {
            helper = new ApiHelper(ClientFactory, "MyHttpClient");
            base.OnInitialized();

            requestUri = $"/api/tenants/{id}";
            // URL for api request

            // Request an GET api
            tenants = await helper.GetRequest<HospitalTenant>(requestUri);



        }
        catch (HttpRequestException ex)
        {
            // Handle exceptions (e.g., network errors)
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private void EditButton()
    {

        Console.WriteLine("Edit button");
        requestUri = $"/admin/tenants/{id}/edit";
        NavigationManager.NavigateTo(requestUri);


    }

    async private void DeleteButton()
    {
        try
        {
            requestUri = $"/api/tenants/{id}";

            var response = await helper.DeleteRequest<HospitalTenant>(requestUri);

            NavigationManager.NavigateTo("admin/tenants");
        }catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

       
        Console.WriteLine("Delete button");

    }
}




